<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.is_gr8.ksqldb.testing.TestExtensionTest" tests="2" skipped="0" failures="1" errors="0" timestamp="2021-02-03T23:35:35" hostname="rocco-laptop" time="0.063">
  <properties/>
  <testcase name="testBarPipeline$ksql_junit5_extension()[1]" classname="com.is_gr8.ksqldb.testing.TestExtensionTest" time="0.005">
    <failure message="org.opentest4j.AssertionFailedError: test did not generate any queries.&#10;Expected: is not an empty collection&#10;     but: was &lt;[]&gt;" type="org.opentest4j.AssertionFailedError">org.opentest4j.AssertionFailedError: test did not generate any queries.
Expected: is not an empty collection
     but: was &lt;[]&gt;
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:43)
	at org.junit.jupiter.api.Assertions.fail(Assertions.java:129)
	at org.junit.jupiter.api.AssertionsKt.fail(Assertions.kt:27)
	at org.junit.jupiter.api.AssertionsKt.fail$default(Assertions.kt:26)
	at com.is_gr8.ksqldb.testing.KsqlTestFactory.executeTestCase(KsqlTestFactory.kt:94)
	at com.is_gr8.ksqldb.testing.KsqlTestFactory.access$executeTestCase(KsqlTestFactory.kt:17)
	at com.is_gr8.ksqldb.testing.KsqlTestFactory$createTestFromTriple$1.execute(KsqlTestFactory.kt:58)
	at org.junit.jupiter.engine.descriptor.DynamicTestTestDescriptor.lambda$execute$0(DynamicTestTestDescriptor.java:52)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.api.extension.InvocationInterceptor.interceptDynamicTest(InvocationInterceptor.java:161)
	at org.junit.jupiter.engine.descriptor.DynamicTestTestDescriptor.lambda$execute$1(DynamicTestTestDescriptor.java:58)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptorCall.lambda$ofVoid$0(InvocationInterceptorChain.java:78)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.descriptor.DynamicTestTestDescriptor.execute(DynamicTestTestDescriptor.java:57)
	at org.junit.jupiter.engine.descriptor.DynamicTestTestDescriptor.execute(DynamicTestTestDescriptor.java:31)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:212)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:192)
	at java.base/java.util.Optional.ifPresent(Optional.java:183)
	at org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor.lambda$invokeTestMethod$1(TestFactoryTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestFactoryTestDescriptor.invokeTestMethod(TestFactoryTestDescriptor.java:93)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.base/java.lang.Thread.run(Thread.java:834)
</failure>
  </testcase>
  <testcase name="testBarPipeline$ksql_junit5_extension()[2]" classname="com.is_gr8.ksqldb.testing.TestExtensionTest" time="0.055"/>
  <system-out><![CDATA[[2021-02-04 00:35:35,400] INFO ProcessingLogConfig values: 
	ksql.logging.processing.rows.include = false
	ksql.logging.processing.stream.auto.create = false
	ksql.logging.processing.stream.name = KSQL_PROCESSING_LOG
	ksql.logging.processing.topic.auto.create = false
	ksql.logging.processing.topic.name = 
	ksql.logging.processing.topic.partitions = 1
	ksql.logging.processing.topic.replication.factor = 1
 (io.confluent.ksql.logging.processing.ProcessingLogConfig:354)
[2021-02-04 00:35:35,402] INFO KsqlConfig values: 
	ksql.access.validator.enable = auto
	ksql.authorization.cache.expiry.time.secs = 30
	ksql.authorization.cache.max.entries = 10000
	ksql.connect.url = http://localhost:8083
	ksql.connect.worker.config = 
	ksql.error.classifier.regex = 
	ksql.extension.dir = ext
	ksql.hidden.topics = [_confluent.*, __confluent.*, _schemas, __consumer_offsets, __transaction_state, connect-configs, connect-offsets, connect-status, connect-statuses]
	ksql.insert.into.values.enabled = true
	ksql.internal.topic.min.insync.replicas = 1
	ksql.internal.topic.replicas = 1
	ksql.metrics.extension = null
	ksql.metrics.tags.custom = 
	ksql.output.topic.name.prefix = 
	ksql.persistence.wrap.single.values = true
	ksql.persistent.prefix = query_
	ksql.pull.queries.enable = true
	ksql.query.persistent.active.limit = 2147483647
	ksql.query.pull.enable.standby.reads = false
	ksql.query.pull.max.allowed.offset.lag = 9223372036854775807
	ksql.query.pull.max.qps = 2147483647
	ksql.query.pull.metrics.enabled = false
	ksql.readonly.topics = [_confluent.*, __confluent.*, _schemas, __consumer_offsets, __transaction_state, connect-configs, connect-offsets, connect-status, connect-statuses]
	ksql.schema.registry.url = 
	ksql.security.extension.class = null
	ksql.service.id = some.ksql.service.id
	ksql.sink.window.change.log.additional.retention = 1000000
	ksql.streams.shutdown.timeout.ms = 300000
	ksql.timestamp.throw.on.invalid = false
	ksql.transient.prefix = transient_
	ksql.udf.collect.metrics = false
	ksql.udf.enable.security.manager = true
	ksql.udfs.enabled = true
	metric.reporters = []
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
 (io.confluent.ksql.util.KsqlConfig:354)
[2021-02-04 00:35:35,404] INFO KsqlConfig values: 
	ksql.access.validator.enable = auto
	ksql.authorization.cache.expiry.time.secs = 30
	ksql.authorization.cache.max.entries = 10000
	ksql.connect.url = http://localhost:8083
	ksql.connect.worker.config = 
	ksql.error.classifier.regex = 
	ksql.extension.dir = ext
	ksql.hidden.topics = [_confluent.*, __confluent.*, _schemas, __consumer_offsets, __transaction_state, connect-configs, connect-offsets, connect-status, connect-statuses]
	ksql.insert.into.values.enabled = true
	ksql.internal.topic.min.insync.replicas = 1
	ksql.internal.topic.replicas = 1
	ksql.metrics.extension = null
	ksql.metrics.tags.custom = 
	ksql.output.topic.name.prefix = 
	ksql.persistence.wrap.single.values = true
	ksql.persistent.prefix = query_
	ksql.pull.queries.enable = true
	ksql.query.persistent.active.limit = 2147483647
	ksql.query.pull.enable.standby.reads = false
	ksql.query.pull.max.allowed.offset.lag = 9223372036854775807
	ksql.query.pull.max.qps = 2147483647
	ksql.query.pull.metrics.enabled = false
	ksql.readonly.topics = [_confluent.*, __confluent.*, _schemas, __consumer_offsets, __transaction_state, connect-configs, connect-offsets, connect-status, connect-statuses]
	ksql.schema.registry.url = 
	ksql.security.extension.class = null
	ksql.service.id = some.ksql.service.id
	ksql.sink.window.change.log.additional.retention = 1000000
	ksql.streams.shutdown.timeout.ms = 300000
	ksql.timestamp.throw.on.invalid = false
	ksql.transient.prefix = transient_
	ksql.udf.collect.metrics = false
	ksql.udf.enable.security.manager = true
	ksql.udfs.enabled = true
	metric.reporters = []
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
 (io.confluent.ksql.util.KsqlConfig:354)
[2021-02-04 00:35:35,408] INFO ProcessingLogConfig values: 
	ksql.logging.processing.rows.include = false
	ksql.logging.processing.stream.auto.create = false
	ksql.logging.processing.stream.name = KSQL_PROCESSING_LOG
	ksql.logging.processing.topic.auto.create = false
	ksql.logging.processing.topic.name = 
	ksql.logging.processing.topic.partitions = 1
	ksql.logging.processing.topic.replication.factor = 1
 (io.confluent.ksql.logging.processing.ProcessingLogConfig:354)
[2021-02-04 00:35:35,409] INFO KsqlConfig values: 
	ksql.access.validator.enable = auto
	ksql.authorization.cache.expiry.time.secs = 30
	ksql.authorization.cache.max.entries = 10000
	ksql.connect.url = http://localhost:8083
	ksql.connect.worker.config = 
	ksql.error.classifier.regex = 
	ksql.extension.dir = ext
	ksql.hidden.topics = [_confluent.*, __confluent.*, _schemas, __consumer_offsets, __transaction_state, connect-configs, connect-offsets, connect-status, connect-statuses]
	ksql.insert.into.values.enabled = true
	ksql.internal.topic.min.insync.replicas = 1
	ksql.internal.topic.replicas = 1
	ksql.metrics.extension = null
	ksql.metrics.tags.custom = 
	ksql.output.topic.name.prefix = 
	ksql.persistence.wrap.single.values = true
	ksql.persistent.prefix = query_
	ksql.pull.queries.enable = true
	ksql.query.persistent.active.limit = 2147483647
	ksql.query.pull.enable.standby.reads = false
	ksql.query.pull.max.allowed.offset.lag = 9223372036854775807
	ksql.query.pull.max.qps = 2147483647
	ksql.query.pull.metrics.enabled = false
	ksql.readonly.topics = [_confluent.*, __confluent.*, _schemas, __consumer_offsets, __transaction_state, connect-configs, connect-offsets, connect-status, connect-statuses]
	ksql.schema.registry.url = 
	ksql.security.extension.class = null
	ksql.service.id = some.ksql.service.id
	ksql.sink.window.change.log.additional.retention = 1000000
	ksql.streams.shutdown.timeout.ms = 300000
	ksql.timestamp.throw.on.invalid = false
	ksql.transient.prefix = transient_
	ksql.udf.collect.metrics = false
	ksql.udf.enable.security.manager = true
	ksql.udfs.enabled = true
	metric.reporters = []
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
 (io.confluent.ksql.util.KsqlConfig:354)
[2021-02-04 00:35:35,412] INFO KsqlConfig values: 
	ksql.access.validator.enable = auto
	ksql.authorization.cache.expiry.time.secs = 30
	ksql.authorization.cache.max.entries = 10000
	ksql.connect.url = http://localhost:8083
	ksql.connect.worker.config = 
	ksql.error.classifier.regex = 
	ksql.extension.dir = ext
	ksql.hidden.topics = [_confluent.*, __confluent.*, _schemas, __consumer_offsets, __transaction_state, connect-configs, connect-offsets, connect-status, connect-statuses]
	ksql.insert.into.values.enabled = true
	ksql.internal.topic.min.insync.replicas = 1
	ksql.internal.topic.replicas = 1
	ksql.metrics.extension = null
	ksql.metrics.tags.custom = 
	ksql.output.topic.name.prefix = 
	ksql.persistence.wrap.single.values = true
	ksql.persistent.prefix = query_
	ksql.pull.queries.enable = true
	ksql.query.persistent.active.limit = 2147483647
	ksql.query.pull.enable.standby.reads = false
	ksql.query.pull.max.allowed.offset.lag = 9223372036854775807
	ksql.query.pull.max.qps = 2147483647
	ksql.query.pull.metrics.enabled = false
	ksql.readonly.topics = [_confluent.*, __confluent.*, _schemas, __consumer_offsets, __transaction_state, connect-configs, connect-offsets, connect-status, connect-statuses]
	ksql.schema.registry.url = 
	ksql.security.extension.class = null
	ksql.service.id = some.ksql.service.id
	ksql.sink.window.change.log.additional.retention = 1000000
	ksql.streams.shutdown.timeout.ms = 300000
	ksql.timestamp.throw.on.invalid = false
	ksql.transient.prefix = transient_
	ksql.udf.collect.metrics = false
	ksql.udf.enable.security.manager = true
	ksql.udfs.enabled = true
	metric.reporters = []
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
 (io.confluent.ksql.util.KsqlConfig:354)
[2021-02-04 00:35:35,415] INFO KsqlConfig values: 
	ksql.access.validator.enable = auto
	ksql.authorization.cache.expiry.time.secs = 30
	ksql.authorization.cache.max.entries = 10000
	ksql.connect.url = http://localhost:8083
	ksql.connect.worker.config = 
	ksql.error.classifier.regex = 
	ksql.extension.dir = ext
	ksql.hidden.topics = [_confluent.*, __confluent.*, _schemas, __consumer_offsets, __transaction_state, connect-configs, connect-offsets, connect-status, connect-statuses]
	ksql.insert.into.values.enabled = true
	ksql.internal.topic.min.insync.replicas = 1
	ksql.internal.topic.replicas = 1
	ksql.metrics.extension = null
	ksql.metrics.tags.custom = 
	ksql.output.topic.name.prefix = 
	ksql.persistence.wrap.single.values = true
	ksql.persistent.prefix = query_
	ksql.pull.queries.enable = true
	ksql.query.persistent.active.limit = 2147483647
	ksql.query.pull.enable.standby.reads = false
	ksql.query.pull.max.allowed.offset.lag = 9223372036854775807
	ksql.query.pull.max.qps = 2147483647
	ksql.query.pull.metrics.enabled = false
	ksql.readonly.topics = [_confluent.*, __confluent.*, _schemas, __consumer_offsets, __transaction_state, connect-configs, connect-offsets, connect-status, connect-statuses]
	ksql.schema.registry.url = 
	ksql.security.extension.class = null
	ksql.service.id = some.ksql.service.id
	ksql.sink.window.change.log.additional.retention = 1000000
	ksql.streams.shutdown.timeout.ms = 300000
	ksql.timestamp.throw.on.invalid = false
	ksql.transient.prefix = transient_
	ksql.udf.collect.metrics = false
	ksql.udf.enable.security.manager = true
	ksql.udfs.enabled = true
	metric.reporters = []
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
 (io.confluent.ksql.util.KsqlConfig:354)
[2021-02-04 00:35:35,417] INFO KsqlConfig values: 
	ksql.access.validator.enable = auto
	ksql.authorization.cache.expiry.time.secs = 30
	ksql.authorization.cache.max.entries = 10000
	ksql.connect.url = http://localhost:8083
	ksql.connect.worker.config = 
	ksql.error.classifier.regex = 
	ksql.extension.dir = ext
	ksql.hidden.topics = [_confluent.*, __confluent.*, _schemas, __consumer_offsets, __transaction_state, connect-configs, connect-offsets, connect-status, connect-statuses]
	ksql.insert.into.values.enabled = true
	ksql.internal.topic.min.insync.replicas = 1
	ksql.internal.topic.replicas = 1
	ksql.metrics.extension = null
	ksql.metrics.tags.custom = 
	ksql.output.topic.name.prefix = 
	ksql.persistence.wrap.single.values = true
	ksql.persistent.prefix = query_
	ksql.pull.queries.enable = true
	ksql.query.persistent.active.limit = 2147483647
	ksql.query.pull.enable.standby.reads = false
	ksql.query.pull.max.allowed.offset.lag = 9223372036854775807
	ksql.query.pull.max.qps = 2147483647
	ksql.query.pull.metrics.enabled = false
	ksql.readonly.topics = [_confluent.*, __confluent.*, _schemas, __consumer_offsets, __transaction_state, connect-configs, connect-offsets, connect-status, connect-statuses]
	ksql.schema.registry.url = 
	ksql.security.extension.class = null
	ksql.service.id = some.ksql.service.id
	ksql.sink.window.change.log.additional.retention = 1000000
	ksql.streams.shutdown.timeout.ms = 300000
	ksql.timestamp.throw.on.invalid = false
	ksql.transient.prefix = transient_
	ksql.udf.collect.metrics = false
	ksql.udf.enable.security.manager = true
	ksql.udfs.enabled = true
	metric.reporters = []
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
 (io.confluent.ksql.util.KsqlConfig:354)
[2021-02-04 00:35:35,427] INFO KsqlConfig values: 
	ksql.access.validator.enable = auto
	ksql.authorization.cache.expiry.time.secs = 30
	ksql.authorization.cache.max.entries = 10000
	ksql.connect.url = http://localhost:8083
	ksql.connect.worker.config = 
	ksql.error.classifier.regex = 
	ksql.extension.dir = ext
	ksql.hidden.topics = [_confluent.*, __confluent.*, _schemas, __consumer_offsets, __transaction_state, connect-configs, connect-offsets, connect-status, connect-statuses]
	ksql.insert.into.values.enabled = true
	ksql.internal.topic.min.insync.replicas = 1
	ksql.internal.topic.replicas = 1
	ksql.metrics.extension = null
	ksql.metrics.tags.custom = 
	ksql.output.topic.name.prefix = 
	ksql.persistence.wrap.single.values = true
	ksql.persistent.prefix = query_
	ksql.pull.queries.enable = true
	ksql.query.persistent.active.limit = 2147483647
	ksql.query.pull.enable.standby.reads = false
	ksql.query.pull.max.allowed.offset.lag = 9223372036854775807
	ksql.query.pull.max.qps = 2147483647
	ksql.query.pull.metrics.enabled = false
	ksql.readonly.topics = [_confluent.*, __confluent.*, _schemas, __consumer_offsets, __transaction_state, connect-configs, connect-offsets, connect-status, connect-statuses]
	ksql.schema.registry.url = 
	ksql.security.extension.class = null
	ksql.service.id = some.ksql.service.id
	ksql.sink.window.change.log.additional.retention = 1000000
	ksql.streams.shutdown.timeout.ms = 300000
	ksql.timestamp.throw.on.invalid = false
	ksql.transient.prefix = transient_
	ksql.udf.collect.metrics = false
	ksql.udf.enable.security.manager = true
	ksql.udfs.enabled = true
	metric.reporters = []
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
 (io.confluent.ksql.util.KsqlConfig:354)
[2021-02-04 00:35:35,448] INFO Query _confluent-ksql-some.ksql.service.idquery_CSAS_S1_0 requires topics [test_topic, S1] (io.confluent.ksql.query.MissingTopicClassifier:46)
Topologies:
   Sub-topology: 0
    Source: KSTREAM-SOURCE-0000000000 (topics: [test_topic])
      --> KSTREAM-TRANSFORMVALUES-0000000001
    Processor: KSTREAM-TRANSFORMVALUES-0000000001 (stores: [])
      --> Project
      <-- KSTREAM-SOURCE-0000000000
    Processor: Project (stores: [])
      --> KSTREAM-SINK-0000000003
      <-- KSTREAM-TRANSFORMVALUES-0000000001
    Sink: KSTREAM-SINK-0000000003 (topic: S1)
      <-- Project

]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
